<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="java100.app.dao.BoardDao">
    
    <resultMap type="board" id="boardMap">
        <id column="no" property="no"/>
        <result column="title" property="title"/>
        <result column="regdt" property="regDate"/>
        <result column="vwcnt" property="viewCount"/>
        <result column="conts" property="content"/>
        <association property="writer" javaType="member">
            <id column="m_no" property="no"/>
            <result column="m_name" property="name"/>
        </association>
        <collection property="files" ofType="UploadFile">
            <id column="f_no" property="no"/>
            <result column="filename" property="filename"/>
        </collection>
    </resultMap>
    
    <sql id="select1">
       select
	       no,
	       title,
	       regdt,
	       vwcnt
    </sql>
    
    <select id="findAll" resultMap="boardMap" parameterType="map">
	   select
	       b.no,
	       b.title,
	       b.regdt,
	       b.vwcnt,
	       m.no as m_no,
	       m.name as m_name
	       
	   from ex_board as b join ex_memb as m on b.mno=m.no
	   <if test="names != null">
	   <where>
	       <foreach collection="names" item="name">
	           or title like '${name}%'
	       </foreach>
	   </where>
	   </if>
	   order by
	   <choose>
	       <when test="orderColumn == 'regdt' and align == 'desc'">
	           regdt desc
	       </when>
	       <when test="orderColumn == 'regdt' and align == 'asc'">
	           regdt asc
	       </when>
	       <when test="orderColumn == 'title' and align == 'desc'">
	           title desc
	       </when>
	       <when test="orderColumn == 'title' and align == 'asc'">
	           title asc
	       </when>
	       <otherwise>
	           no asc
	       </otherwise>
	   </choose>
	   limit #{startIndex}, #{size}
    </select>
    
    <select id="findByNo" resultMap="boardMap" parameterType="int">
       <include refid="select1"/>
       ,conts
       from ex_board where no=#{value}
    </select>

    <select id="findByNo2" resultMap="boardMap" parameterType="int">
       select
           b.no,
           b.title,
           b.regdt,
           b.vwcnt,
           b.conts,
           m.no as m_no,
           m.name,
           m.email,
           f.no as f_no,
           f.filename
           from ex_board as b join ex_memb as m on b.mno=m.no
           left join ex_file as f on b.no=f.bno
       where b.no=#{value}
    </select>
    
    <select id="countAll" resultType="int">
       select count(*) from ex_board
    </select>
    
    <insert id="insert" parameterType="Board" useGeneratedKeys="true" keyColumn="no" keyProperty="no"> 
        insert into ex_board(title,conts,regdt,mno) values(#{title},#{content},now(),#{writer.no})
    </insert>
    
    <update id="update" parameterType="Board">
        update ex_board set title=#{title}, conts=#{content} where no=#{no}
    </update>
    
    <update id="updateViewCount" parameterType="int">
        update ex_board set 
            vwcnt=vwcnt + 1
        where no=#{value}
    </update>
    
    <delete id="delete" parameterType="int">
        delete from ex_board where no=#{value}
    </delete>
    
    

</mapper>

